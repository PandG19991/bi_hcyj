"""fix_collation_in_models

Revision ID: 4b68ea1daa39
Revises: 
Create Date: 2025-04-22 20:41:17.081860

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4b68ea1daa39'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('product_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台商品ID/SPUID (如: i_xxxxx, p_xxxxx)'),
    sa.Column('platform', sa.String(length=32, collation='utf8mb4_unicode_ci'), nullable=False, comment='来源平台'),
    sa.Column('name', sa.String(length=500), nullable=True, comment='商品名称'),
    sa.Column('type', sa.Integer(), nullable=True, comment='商品类型代码 (来自 API, resource_type)'),
    sa.Column('type_desc', sa.String(length=100), nullable=True, comment='商品类型描述 (来自 API, spu_type)'),
    sa.Column('img_url', sa.String(length=500), nullable=True, comment='商品主图URL (来自 goods_img[0])'),
    sa.Column('price_low', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='最低价格 (元)'),
    sa.Column('price_high', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='最高价格 (元)'),
    sa.Column('status', sa.Integer(), nullable=True, comment='上架状态 (来自 sale_status, 0-下架/待上架, 1-已上架)'),
    sa.Column('created_at_platform', sa.DateTime(), nullable=True, comment='商品创建时间 (平台时间)'),
    sa.Column('updated_at_platform', sa.DateTime(), nullable=True, comment='商品更新时间 (平台时间)'),
    sa.Column('first_seen_at', sa.DateTime(), nullable=True, comment='在本系统中首次记录的时间'),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True, comment='在本系统的最后更新时间'),
    sa.PrimaryKeyConstraint('product_id', 'platform'),
    comment='商品基础信息表'
    )
    op.create_index('ix_products_created_at', 'products', ['platform', 'created_at_platform'], unique=False)
    op.create_index('ix_products_updated_at', 'products', ['platform', 'updated_at_platform'], unique=False)
    op.create_table('sync_status',
    sa.Column('sync_target', sa.String(length=100), nullable=False, comment='同步目标标识 (例如: xiaoe_orders_incremental, xiaoe_aftersales_full)'),
    sa.Column('last_sync_time', sa.DateTime(), nullable=True, comment='上次成功同步的查询截止时间 (基于查询条件)'),
    sa.Column('last_sync_id', sa.String(length=100), nullable=True, comment='上次成功同步的最后一个记录ID (如果适用)'),
    sa.Column('sync_cursor', sa.String(length=255), nullable=True, comment='用于分页或增量同步的游标 (如 page_index, next_cursor)'),
    sa.Column('last_successful_run_start', sa.DateTime(), nullable=True, comment='最后一次成功执行脚本的开始时间'),
    sa.Column('last_successful_run_end', sa.DateTime(), nullable=True, comment='最后一次成功执行脚本的结束时间'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='最后一次运行状态 (success, failed, pending)'),
    sa.Column('message', sa.Text(), nullable=True, comment='最后一次运行的消息或错误'),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True, comment='此记录的最后更新时间'),
    sa.PrimaryKeyConstraint('sync_target')
    )
    op.create_table('users',
    sa.Column('user_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台用户ID (如: u_xxxxx)'),
    sa.Column('platform', sa.String(length=32, collation='utf8mb4_unicode_ci'), nullable=False, comment='来源平台'),
    sa.Column('nickname', sa.String(length=255), nullable=True, comment='用户昵称'),
    sa.Column('avatar', sa.String(length=500), nullable=True, comment='用户头像URL'),
    sa.Column('phone', sa.String(length=50), nullable=True, comment='用户手机号 (可能脱敏)'),
    sa.Column('register_time', sa.DateTime(), nullable=True, comment='平台注册时间 (如果API提供)'),
    sa.Column('first_seen_at', sa.DateTime(), nullable=True, comment='在本系统中首次记录的时间'),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True, comment='在本系统的最后更新时间'),
    sa.PrimaryKeyConstraint('user_id', 'platform'),
    comment='用户基础信息表'
    )
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=False)
    op.create_table('orders',
    sa.Column('order_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台订单ID'),
    sa.Column('platform', sa.String(length=32, collation='utf8mb4_unicode_ci'), nullable=False, comment='来源平台'),
    sa.Column('app_id', sa.String(length=100), nullable=True, comment='店铺ID (冗余)'),
    sa.Column('user_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台用户ID'),
    sa.Column('order_state', sa.SmallInteger(), nullable=True, comment='订单状态码'),
    sa.Column('pay_state', sa.SmallInteger(), nullable=True, comment='支付状态码'),
    sa.Column('order_type', sa.SmallInteger(), nullable=True, comment='订单类型码'),
    sa.Column('sub_order_type', sa.SmallInteger(), nullable=True, comment='子订单类型码'),
    sa.Column('aftersale_show_state', sa.SmallInteger(), nullable=True, comment='售后显示状态码'),
    sa.Column('settle_state', sa.SmallInteger(), nullable=True, comment='结算状态码'),
    sa.Column('check_state', sa.SmallInteger(), nullable=True, comment='核销状态码'),
    sa.Column('order_close_type', sa.SmallInteger(), nullable=True, comment='订单关闭类型码'),
    sa.Column('is_deleted', sa.Boolean(), nullable=True, comment='是否删除'),
    sa.Column('actual_fee', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='订单实付金额 (元)'),
    sa.Column('goods_original_total_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='商品原始总价 (元)'),
    sa.Column('discount_amount', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='订单优惠金额 (元)'),
    sa.Column('freight_actual_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='运费实付金额 (元)'),
    sa.Column('freight_original_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='运费原始金额 (元)'),
    sa.Column('modified_amount', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='改价金额 (元)'),
    sa.Column('deduct_amount', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='抵扣金额 (元)'),
    sa.Column('refund_fee', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='退款金额 (元)'),
    sa.Column('created_at_platform', sa.DateTime(), nullable=True, comment='订单创建时间 (平台时间)'),
    sa.Column('pay_state_time', sa.DateTime(), nullable=True, comment='支付时间 (平台时间)'),
    sa.Column('order_state_time', sa.DateTime(), nullable=True, comment='订单状态更新时间 (平台时间)'),
    sa.Column('aftersale_show_state_time', sa.DateTime(), nullable=True, comment='售后状态更新时间 (平台时间)'),
    sa.Column('settle_state_time', sa.DateTime(), nullable=True, comment='结算状态更新时间 (平台时间)'),
    sa.Column('refund_time', sa.DateTime(), nullable=True, comment='退款时间 (平台时间)'),
    sa.Column('update_time_platform', sa.DateTime(), nullable=True, comment='订单更新时间 (平台时间, 来自v2.0)'),
    sa.Column('goods_buy_num', sa.Integer(), nullable=True, comment='商品购买总数'),
    sa.Column('goods_name_overview', sa.Text(), nullable=True, comment='商品名称概览 (可能含多个)'),
    sa.Column('goods_spu_type', sa.SmallInteger(), nullable=True, comment='商品一级类型码'),
    sa.Column('goods_spu_sub_type', sa.String(length=100), nullable=True, comment='商品二级类型'),
    sa.Column('channel_type', sa.SmallInteger(), nullable=True, comment='渠道类型码'),
    sa.Column('channel_bus_id', sa.String(length=100), nullable=True, comment='渠道业务ID'),
    sa.Column('source', sa.SmallInteger(), nullable=True, comment='下单终端类型码'),
    sa.Column('wx_app_type', sa.SmallInteger(), nullable=True, comment='微信应用类型码'),
    sa.Column('relation_order_type', sa.SmallInteger(), nullable=True, comment='关联订单类型码'),
    sa.Column('relation_order_id', sa.String(length=100), nullable=True, comment='关联订单ID'),
    sa.Column('relation_order_appid', sa.String(length=100), nullable=True, comment='关联订单店铺ID'),
    sa.Column('pay_type', sa.SmallInteger(), nullable=True, comment='支付方式码'),
    sa.Column('out_order_id_payment', sa.String(length=100), nullable=True, comment='商户订单号 (来自payment_info)'),
    sa.Column('third_order_id', sa.String(length=100), nullable=True, comment='第三方支付订单号'),
    sa.Column('trade_id', sa.String(length=100), nullable=True, comment='交易ID'),
    sa.Column('share_type', sa.SmallInteger(), nullable=True, comment='分享类型码'),
    sa.Column('share_user_id', sa.String(length=100), nullable=True, comment='分享者用户ID'),
    sa.Column('distribute_type_bitmap', sa.JSON(), nullable=True, comment='分销类型位图 (JSON存储)'),
    sa.Column('activity_type_bitmap', sa.JSON(), nullable=True, comment='活动类型位图 (JSON存储)'),
    sa.Column('ship_way_choose_type', sa.SmallInteger(), nullable=True, comment='配送方式选择类型码'),
    sa.Column('ship_info', sa.JSON(), nullable=True, comment='物流信息 (JSON存储, 含地址/物流公司/单号等)'),
    sa.Column('user_comment', sa.Text(), nullable=True, comment='用户留言'),
    sa.Column('merchant_remark', sa.Text(), nullable=True, comment='商家备注'),
    sa.Column('use_collection', sa.SmallInteger(), nullable=True, comment='是否使用信息采集'),
    sa.Column('first_seen_at', sa.DateTime(), nullable=True, comment='在本系统中首次记录的时间'),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True, comment='在本系统的最后更新时间'),
    sa.PrimaryKeyConstraint('order_id', 'platform'),
    comment='订单主表'
    )
    op.create_index('ix_orders_created_at', 'orders', ['platform', 'created_at_platform'], unique=False)
    op.create_index(op.f('ix_orders_created_at_platform'), 'orders', ['created_at_platform'], unique=False)
    op.create_index(op.f('ix_orders_order_state'), 'orders', ['order_state'], unique=False)
    op.create_index(op.f('ix_orders_pay_state'), 'orders', ['pay_state'], unique=False)
    op.create_index(op.f('ix_orders_pay_state_time'), 'orders', ['pay_state_time'], unique=False)
    op.create_index('ix_orders_update_time', 'orders', ['platform', 'update_time_platform'], unique=False)
    op.create_index(op.f('ix_orders_update_time_platform'), 'orders', ['update_time_platform'], unique=False)
    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    op.create_index('ix_orders_user_id_created_at', 'orders', ['platform', 'user_id', 'created_at_platform'], unique=False)
    op.create_foreign_key(
        'fk_orders_users',
        'orders', 'users',
        ['user_id', 'platform'], ['user_id', 'platform']
    )
    op.create_table('aftersale_orders',
    sa.Column('aftersale_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台售后单ID'),
    sa.Column('platform', sa.String(length=32, collation='utf8mb4_unicode_ci'), nullable=False, comment='来源平台'),
    sa.Column('order_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台父订单ID'),
    sa.Column('user_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=True, comment='平台用户ID (冗余或通过order关联)'),
    sa.Column('state', sa.SmallInteger(), nullable=True, comment='售后状态码'),
    sa.Column('state_str', sa.String(length=100), nullable=True, comment='售后状态中文名'),
    sa.Column('sale_type', sa.SmallInteger(), nullable=True, comment='售后方式码'),
    sa.Column('sale_type_name', sa.String(length=50), nullable=True, comment='售后方式中文名'),
    sa.Column('ship_state', sa.SmallInteger(), nullable=True, comment='退货物流状态码'),
    sa.Column('ship_state_str', sa.String(length=100), nullable=True, comment='退货物流状态中文名'),
    sa.Column('apply_refund_money', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='申请退款金额 (元)'),
    sa.Column('refund_money', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='实际退款金额 (元)'),
    sa.Column('created_at_platform', sa.DateTime(), nullable=True, comment='售后单创建时间 (平台时间)'),
    sa.Column('updated_at_platform', sa.DateTime(), nullable=True, comment='售后单更新时间 (平台时间)'),
    sa.Column('invalid_time', sa.DateTime(), nullable=True, comment='售后单失效时间'),
    sa.Column('state_invalid_time', sa.DateTime(), nullable=True, comment='状态失效时间'),
    sa.Column('reason', sa.Text(), nullable=True, comment='买家申请售后原因'),
    sa.Column('state_reason', sa.Text(), nullable=True, comment='状态原因 (API 可能提供)'),
    sa.Column('remark', sa.Text(), nullable=True, comment='买家售后备注'),
    sa.Column('merchant_remark', sa.Text(), nullable=True, comment='商家售后备注'),
    sa.Column('goods_name_overview', sa.Text(), nullable=True, comment='商品名称概览'),
    sa.Column('img_url_overview', sa.String(length=500), nullable=True, comment='商品图片URL概览'),
    sa.Column('sku_info_overview', sa.Text(), nullable=True, comment='商品规格概览'),
    sa.Column('resource_type_str', sa.String(length=100), nullable=True, comment='资源类型中文名'),
    sa.Column('use_collection', sa.SmallInteger(), nullable=True, comment='订单渠道 (无需关注)'),
    sa.Column('first_seen_at', sa.DateTime(), nullable=True, comment='在本系统中首次记录的时间'),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True, comment='在本系统的最后更新时间'),
    sa.PrimaryKeyConstraint('aftersale_id', 'platform'),
    comment='售后订单主表'
    )
    op.create_index('ix_aftersale_orders_created_at', 'aftersale_orders', ['platform', 'created_at_platform'], unique=False)
    op.create_index(op.f('ix_aftersale_orders_created_at_platform'), 'aftersale_orders', ['created_at_platform'], unique=False)
    op.create_index('ix_aftersale_orders_order_id', 'aftersale_orders', ['platform', 'order_id'], unique=False)
    op.create_index(op.f('ix_aftersale_orders_state'), 'aftersale_orders', ['state'], unique=False)
    op.create_index('ix_aftersale_orders_updated_at', 'aftersale_orders', ['platform', 'updated_at_platform'], unique=False)
    op.create_index(op.f('ix_aftersale_orders_updated_at_platform'), 'aftersale_orders', ['updated_at_platform'], unique=False)
    op.create_index(op.f('ix_aftersale_orders_user_id'), 'aftersale_orders', ['user_id'], unique=False)
    op.create_foreign_key(
        'fk_aftersale_orders_orders',
        'aftersale_orders', 'orders',
        ['order_id', 'platform'], ['order_id', 'platform']
    )
    op.create_foreign_key(
        'fk_aftersale_orders_users',
        'aftersale_orders', 'users',
        ['user_id', 'platform'], ['user_id', 'platform']
    )
    op.create_table('order_items',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台订单ID'),
    sa.Column('platform', sa.String(length=32, collation='utf8mb4_unicode_ci'), nullable=False, comment='来源平台'),
    sa.Column('product_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台商品ID/SPUID'),
    sa.Column('item_id', sa.String(length=100), nullable=True, comment='平台订单项ID (如果API提供, v1.0有)'),
    sa.Column('resource_id', sa.String(length=100), nullable=True, comment='资源ID (来自v2.0)'),
    sa.Column('resource_type', sa.SmallInteger(), nullable=True, comment='资源类型码'),
    sa.Column('goods_name', sa.String(length=500), nullable=True, comment='商品名称'),
    sa.Column('goods_image', sa.String(length=500), nullable=True, comment='商品图片URL'),
    sa.Column('goods_desc', sa.Text(), nullable=True, comment='商品描述'),
    sa.Column('goods_sn', sa.String(length=100), nullable=True, comment='商品编码'),
    sa.Column('spu_type', sa.String(length=50), nullable=True, comment='SPU 类型'),
    sa.Column('sku_id', sa.String(length=100), nullable=True, comment='SKU ID'),
    sa.Column('sku_spec_code', sa.String(length=100), nullable=True, comment='SKU 规格编码'),
    sa.Column('goods_spec_desc', sa.String(length=500), nullable=True, comment='商品规格描述'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='购买数量'),
    sa.Column('unit_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='商品单价 (元)'),
    sa.Column('total_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='商品总价 (单价*数量) (元)'),
    sa.Column('discount_amount', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='商品优惠金额 (元)'),
    sa.Column('actual_fee', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='商品实付金额 (元)'),
    sa.Column('discount_detail', sa.JSON(), nullable=True, comment='优惠详情列表 (JSON存储)'),
    sa.Column('period_type', sa.SmallInteger(), nullable=True, comment='有效期类型码'),
    sa.Column('expire_desc', sa.String(length=255), nullable=True, comment='有效期描述'),
    sa.Column('expire_start', sa.DateTime(), nullable=True, comment='有效期开始时间'),
    sa.Column('expire_end', sa.DateTime(), nullable=True, comment='有效期结束时间'),
    sa.Column('check_state', sa.SmallInteger(), nullable=True, comment='核销状态码'),
    sa.Column('check_state_desc', sa.String(length=100), nullable=True, comment='核销状态描述'),
    sa.Column('refund_state', sa.SmallInteger(), nullable=True, comment='退款状态码'),
    sa.Column('refund_state_desc', sa.String(length=100), nullable=True, comment='退款状态描述'),
    sa.Column('ship_state', sa.SmallInteger(), nullable=True, comment='发货状态码'),
    sa.Column('ship_state_desc', sa.String(length=100), nullable=True, comment='发货状态描述'),
    sa.Column('relation_goods_id', sa.String(length=100), nullable=True, comment='关联商品ID'),
    sa.Column('relation_goods_type', sa.SmallInteger(), nullable=True, comment='关联商品类型码'),
    sa.Column('relation_goods_type_desc', sa.String(length=100), nullable=True, comment='关联商品类型描述'),
    sa.Column('first_seen_at', sa.DateTime(), nullable=True, comment='在本系统中首次记录的时间'),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True, comment='在本系统的最后更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('platform', 'order_id', 'product_id', 'sku_id', name='uk_order_item_sku'),
    comment='订单商品明细表'
    )
    op.create_index('ix_order_items_order_product_sku', 'order_items', ['platform', 'order_id', 'product_id', 'sku_id'], unique=False)
    op.create_index('ix_order_items_product', 'order_items', ['platform', 'product_id'], unique=False)
    op.create_index(op.f('ix_order_items_product_id'), 'order_items', ['product_id'], unique=False)
    op.create_index('ix_order_items_sku', 'order_items', ['platform', 'sku_id'], unique=False)
    op.create_index(op.f('ix_order_items_sku_id'), 'order_items', ['sku_id'], unique=False)
    op.create_foreign_key(
        'fk_order_items_orders',
        'order_items', 'orders',
        ['order_id', 'platform'], ['order_id', 'platform']
    )
    op.create_foreign_key(
        'fk_order_items_products',
        'order_items', 'products',
        ['product_id', 'platform'], ['product_id', 'platform']
    )
    op.create_table('aftersale_items',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('aftersale_id', sa.String(length=100, collation='utf8mb4_unicode_ci'), nullable=False, comment='平台售后单ID'),
    sa.Column('platform', sa.String(length=32, collation='utf8mb4_unicode_ci'), nullable=False, comment='来源平台'),
    sa.Column('goods_name', sa.String(length=500), nullable=True, comment='商品名称'),
    sa.Column('goods_tag', sa.String(length=100), nullable=True, comment='商品标签'),
    sa.Column('img_url', sa.String(length=500), nullable=True, comment='商品图片URL'),
    sa.Column('sku_info', sa.Text(), nullable=True, comment='商品规格信息'),
    sa.Column('buy_num', sa.Integer(), nullable=False, comment='售后涉及的数量'),
    sa.Column('goods_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='商品价格 (元) - 注意: API单位是分'),
    sa.Column('first_seen_at', sa.DateTime(), nullable=True, comment='在本系统中首次记录的时间'),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True, comment='在本系统的最后更新时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='售后订单商品明细表'
    )
    op.create_index('ix_aftersale_items_aftersale_id', 'aftersale_items', ['platform', 'aftersale_id'], unique=False)
    op.create_foreign_key(
        'fk_aftersale_items_aftersale_orders',
        'aftersale_items', 'aftersale_orders',
        ['aftersale_id', 'platform'], ['aftersale_id', 'platform']
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_aftersale_items_aftersale_orders', 'aftersale_items', type_='foreignkey')
    op.drop_constraint('fk_order_items_products', 'order_items', type_='foreignkey')
    op.drop_constraint('fk_order_items_orders', 'order_items', type_='foreignkey')
    op.drop_constraint('fk_aftersale_orders_users', 'aftersale_orders', type_='foreignkey')
    op.drop_constraint('fk_aftersale_orders_orders', 'aftersale_orders', type_='foreignkey')
    op.drop_constraint('fk_orders_users', 'orders', type_='foreignkey')
    op.drop_index('ix_aftersale_items_aftersale_id', table_name='aftersale_items')
    op.drop_table('aftersale_items')
    op.drop_index(op.f('ix_order_items_sku_id'), table_name='order_items')
    op.drop_index('ix_order_items_sku', table_name='order_items')
    op.drop_index(op.f('ix_order_items_product_id'), table_name='order_items')
    op.drop_index('ix_order_items_product', table_name='order_items')
    op.drop_index('ix_order_items_order_product_sku', table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_aftersale_orders_user_id'), table_name='aftersale_orders')
    op.drop_index(op.f('ix_aftersale_orders_updated_at_platform'), table_name='aftersale_orders')
    op.drop_index('ix_aftersale_orders_updated_at', table_name='aftersale_orders')
    op.drop_index(op.f('ix_aftersale_orders_state'), table_name='aftersale_orders')
    op.drop_index('ix_aftersale_orders_order_id', table_name='aftersale_orders')
    op.drop_index(op.f('ix_aftersale_orders_created_at_platform'), table_name='aftersale_orders')
    op.drop_index('ix_aftersale_orders_created_at', table_name='aftersale_orders')
    op.drop_table('aftersale_orders')
    op.drop_index('ix_orders_user_id_created_at', table_name='orders')
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_update_time_platform'), table_name='orders')
    op.drop_index('ix_orders_update_time', table_name='orders')
    op.drop_index(op.f('ix_orders_pay_state_time'), table_name='orders')
    op.drop_index(op.f('ix_orders_pay_state'), table_name='orders')
    op.drop_index(op.f('ix_orders_order_state'), table_name='orders')
    op.drop_index(op.f('ix_orders_created_at_platform'), table_name='orders')
    op.drop_index('ix_orders_created_at', table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_table('users')
    op.drop_table('sync_status')
    op.drop_index('ix_products_updated_at', table_name='products')
    op.drop_index('ix_products_created_at', table_name='products')
    op.drop_table('products')
    # ### end Alembic commands ###
