"""Initial schema

Revision ID: f12a32b7cac1
Revises: 
Create Date: 2025-04-25 14:46:28.988063

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f12a32b7cac1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dim_xiaoe_goods',
    sa.Column('goods_resource_id', sa.String(length=100), nullable=False, comment='商品资源ID (主键)'),
    sa.Column('spu_id', sa.String(length=100), nullable=True, comment='商品SPU ID'),
    sa.Column('goods_internal_id', sa.Integer(), nullable=True, comment='小鹅通内部商品ID'),
    sa.Column('goods_name', sa.String(length=500), nullable=True, comment='商品名称'),
    sa.Column('resource_type', sa.Integer(), nullable=True, comment='资源类型代码'),
    sa.Column('spu_type', sa.String(length=50), nullable=True, comment='SPU类型代码 (如: VDO, ENT)'),
    sa.Column('goods_category_id', sa.String(length=100), nullable=True, comment='商品分类ID'),
    sa.Column('goods_tag', sa.String(length=255), nullable=True, comment='商品标签'),
    sa.Column('sell_type', sa.Integer(), nullable=True, comment='售卖方式 (1-独立, 2-关联)'),
    sa.Column('sale_status', sa.Integer(), nullable=True, comment='上架状态 (0-下架, 1-上架, 2-待上架)'),
    sa.Column('price_low', sa.Numeric(precision=12, scale=2), nullable=True, comment='最低价 (元)'),
    sa.Column('price_high', sa.Numeric(precision=12, scale=2), nullable=True, comment='最高价 (元)'),
    sa.Column('price_line', sa.Numeric(precision=12, scale=2), nullable=True, comment='划线价 (元)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='商品创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='商品更新时间'),
    sa.Column('sale_at', sa.DateTime(), nullable=True, comment='上架时间'),
    sa.Column('is_deleted', sa.Boolean(), nullable=True, comment='是否删除'),
    sa.Column('is_display', sa.Boolean(), nullable=True, comment='是否显示'),
    sa.Column('is_stop_sell', sa.Boolean(), nullable=True, comment='是否停售'),
    sa.Column('is_forbid', sa.Boolean(), nullable=True, comment='是否封禁'),
    sa.Column('visit_count', sa.Integer(), nullable=True, comment='访问次数'),
    sa.Column('appraise_count', sa.Integer(), nullable=True, comment='评价数'),
    sa.Column('sell_count', sa.Integer(), nullable=True, comment='销量 (来自extend字段)'),
    sa.Column('stock_deduct_mode', sa.Integer(), nullable=True, comment='扣库存方式 (0-付款减, 1-拍下减)'),
    sa.Column('limit_purchase', sa.Integer(), nullable=True, comment='限购数量'),
    sa.Column('has_distribute', sa.Boolean(), nullable=True, comment='是否参与分销'),
    sa.Column('freight', sa.Numeric(precision=10, scale=2), nullable=True, comment='运费 (元)'),
    sa.Column('freight_template_id', sa.String(length=100), nullable=True, comment='运费模板ID'),
    sa.Column('img_url', sa.Text(), nullable=True, comment='商品压缩图URL'),
    sa.Column('main_img_urls', sa.JSON(), nullable=True, comment='商品主图URL列表 (JSON)'),
    sa.Column('etl_inserted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL插入时间'),
    sa.Column('etl_updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL更新时间'),
    sa.PrimaryKeyConstraint('goods_resource_id')
    )
    op.create_index(op.f('ix_dim_xiaoe_goods_spu_id'), 'dim_xiaoe_goods', ['spu_id'], unique=False)
    op.create_table('dim_xiaoe_user',
    sa.Column('user_id', sa.String(length=100), nullable=False, comment='小鹅通用户唯一ID'),
    sa.Column('user_nickname', sa.String(length=255), nullable=True, comment='用户昵称'),
    sa.Column('bind_phone', sa.String(length=50), nullable=True, comment='绑定手机号'),
    sa.Column('avatar_url', sa.Text(), nullable=True, comment='头像URL'),
    sa.Column('source', sa.String(length=50), nullable=True, comment='用户来源描述 (如: 微信)'),
    sa.Column('total_paid_amount', sa.Numeric(precision=12, scale=2), nullable=True, comment='累计消费金额 (元)'),
    sa.Column('purchase_count', sa.Integer(), nullable=True, comment='购买次数'),
    sa.Column('wx_union_id', sa.String(length=100), nullable=True, comment='微信 Union ID'),
    sa.Column('wx_open_id', sa.String(length=100), nullable=True, comment='微信 Open ID (公众号)'),
    sa.Column('wx_app_open_id', sa.String(length=100), nullable=True, comment='微信 Open ID (小程序)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='用户创建时间'),
    sa.Column('etl_inserted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL插入时间'),
    sa.Column('etl_updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL更新时间'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('sync_state',
    sa.Column('sync_type', sa.String(length=50), nullable=False, comment='同步类型 (e.g., users, goods, orders, aftersales)'),
    sa.Column('last_processed_cursor', sa.JSON(), nullable=True, comment='最后处理的游标 (用于用户同步等)'),
    sa.Column('last_processed_page', sa.Integer(), nullable=True, comment='最后处理的页码 (用于商品同步等)'),
    sa.Column('last_processed_timestamp', sa.DateTime(), nullable=True, comment='最后处理的时间戳 (用于订单/售后同步)'),
    sa.Column('last_run_status', sa.String(length=20), nullable=True, comment='上次运行状态 (e.g., success, failed)'),
    sa.Column('last_updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='状态更新时间'),
    sa.PrimaryKeyConstraint('sync_type')
    )
    op.create_table('fact_xiaoe_order',
    sa.Column('order_id', sa.String(length=100), nullable=False, comment='订单ID (主键)'),
    sa.Column('user_id', sa.String(length=100), nullable=True, comment='用户ID (外键)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='下单时间'),
    sa.Column('paid_at', sa.DateTime(), nullable=True, comment='支付时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='订单更新时间'),
    sa.Column('settled_at', sa.DateTime(), nullable=True, comment='结算时间'),
    sa.Column('order_state', sa.Integer(), nullable=True, comment='订单状态代码'),
    sa.Column('pay_state', sa.Integer(), nullable=True, comment='支付状态代码'),
    sa.Column('settle_state', sa.Integer(), nullable=True, comment='结算状态代码'),
    sa.Column('aftersale_show_state', sa.Integer(), nullable=True, comment='售后显示状态代码'),
    sa.Column('order_type', sa.Integer(), nullable=True, comment='订单类型代码'),
    sa.Column('pay_type', sa.Integer(), nullable=True, comment='支付类型代码'),
    sa.Column('trade_id', sa.String(length=100), nullable=True, comment='支付交易号'),
    sa.Column('app_id', sa.String(length=100), nullable=True, comment='店铺App ID'),
    sa.Column('goods_original_total_price', sa.Numeric(precision=12, scale=2), nullable=True, comment='商品原总价 (元)'),
    sa.Column('total_price', sa.Numeric(precision=12, scale=2), nullable=True, comment='订单总金额 (含运费优惠等) (元)'),
    sa.Column('actual_fee', sa.Numeric(precision=12, scale=2), nullable=True, comment='实际支付金额 (元)'),
    sa.Column('discount_amount', sa.Numeric(precision=12, scale=2), nullable=True, comment='订单级优惠金额 (元)'),
    sa.Column('freight_price', sa.Numeric(precision=10, scale=2), nullable=True, comment='运费 (元)'),
    sa.Column('total_modified_amount', sa.Numeric(precision=12, scale=2), nullable=True, comment='总改价金额 (元)'),
    sa.Column('ship_receiver', sa.String(length=255), nullable=True, comment='收货人姓名'),
    sa.Column('ship_phone', sa.String(length=50), nullable=True, comment='收货人手机'),
    sa.Column('ship_province', sa.String(length=100), nullable=True, comment='收货省份'),
    sa.Column('ship_city', sa.String(length=100), nullable=True, comment='收货城市'),
    sa.Column('ship_county', sa.String(length=100), nullable=True, comment='收货区县'),
    sa.Column('ship_detail', sa.Text(), nullable=True, comment='详细收货地址'),
    sa.Column('ship_company', sa.String(length=100), nullable=True, comment='快递公司'),
    sa.Column('ship_express_id', sa.String(length=100), nullable=True, comment='快递单号'),
    sa.Column('shipped_at', sa.DateTime(), nullable=True, comment='发货时间'),
    sa.Column('ship_confirmed_at', sa.DateTime(), nullable=True, comment='确认收货时间'),
    sa.Column('promoter_user_id', sa.String(length=100), nullable=True, comment='推广员用户ID'),
    sa.Column('promoter_nickname', sa.String(length=255), nullable=True, comment='推广员昵称'),
    sa.Column('buyer_comment', sa.Text(), nullable=True, comment='买家留言'),
    sa.Column('etl_inserted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL插入时间'),
    sa.Column('etl_updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL更新时间'),
    sa.ForeignKeyConstraint(['promoter_user_id'], ['dim_xiaoe_user.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['dim_xiaoe_user.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_index(op.f('ix_fact_xiaoe_order_user_id'), 'fact_xiaoe_order', ['user_id'], unique=False)
    op.create_table('fact_xiaoe_aftersale',
    sa.Column('aftersale_id', sa.String(length=100), nullable=False, comment='售后单ID (主键)'),
    sa.Column('order_id', sa.String(length=100), nullable=False, comment='关联订单ID (外键)'),
    sa.Column('state', sa.Integer(), nullable=True, comment='售后状态代码'),
    sa.Column('state_description', sa.String(length=100), nullable=True, comment='售后状态描述'),
    sa.Column('sale_type', sa.Integer(), nullable=True, comment='售后类型代码 (1-退款, 2-退货退款)'),
    sa.Column('sale_type_name', sa.String(length=50), nullable=True, comment='售后类型名称'),
    sa.Column('apply_refund_amount', sa.Numeric(precision=12, scale=2), nullable=True, comment='申请退款金额 (元)'),
    sa.Column('actual_refund_amount', sa.Numeric(precision=12, scale=2), nullable=True, comment='实际退款金额 (元)'),
    sa.Column('reason', sa.Text(), nullable=True, comment='售后原因'),
    sa.Column('buyer_remark', sa.Text(), nullable=True, comment='买家备注'),
    sa.Column('merchant_remark', sa.Text(), nullable=True, comment='商家备注'),
    sa.Column('state_reason', sa.Text(), nullable=True, comment='状态原因'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='售后单创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='售后单更新时间'),
    sa.Column('invalid_at', sa.DateTime(), nullable=True, comment='售后单失效时间'),
    sa.Column('state_invalid_at', sa.DateTime(), nullable=True, comment='当前状态失效时间'),
    sa.Column('main_goods_name', sa.String(length=500), nullable=True, comment='涉及的主要商品名称 (冗余)'),
    sa.Column('main_sku_id', sa.String(length=100), nullable=True, comment='涉及的主要商品SKU ID (冗余)'),
    sa.Column('main_sku_info', sa.String(length=255), nullable=True, comment='涉及的主要商品SKU描述 (冗余)'),
    sa.Column('order_actual_fee', sa.Numeric(precision=12, scale=2), nullable=True, comment='原订单支付金额 (元, 冗余)'),
    sa.Column('etl_inserted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL插入时间'),
    sa.Column('etl_updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL更新时间'),
    sa.ForeignKeyConstraint(['order_id'], ['fact_xiaoe_order.order_id'], ),
    sa.PrimaryKeyConstraint('aftersale_id')
    )
    op.create_index(op.f('ix_fact_xiaoe_aftersale_order_id'), 'fact_xiaoe_aftersale', ['order_id'], unique=False)
    op.create_table('fact_xiaoe_order_item',
    sa.Column('order_item_id', sa.Integer(), autoincrement=True, nullable=False, comment='代理主键'),
    sa.Column('order_id', sa.String(length=100), nullable=False, comment='订单ID (外键)'),
    sa.Column('goods_resource_id', sa.String(length=100), nullable=True, comment='商品资源ID (外键)'),
    sa.Column('goods_spu_id', sa.String(length=100), nullable=True, comment='商品SPU ID'),
    sa.Column('sku_id', sa.String(length=100), nullable=True, comment='商品SKU ID'),
    sa.Column('goods_name', sa.String(length=500), nullable=True, comment='商品名称 (冗余)'),
    sa.Column('sku_spec_description', sa.String(length=255), nullable=True, comment='SKU规格描述 (冗余)'),
    sa.Column('quantity', sa.Integer(), nullable=True, comment='购买数量'),
    sa.Column('unit_price', sa.Numeric(precision=12, scale=2), nullable=True, comment='商品单价 (元)'),
    sa.Column('total_price', sa.Numeric(precision=12, scale=2), nullable=True, comment='商品行总价 (元)'),
    sa.Column('resource_type', sa.Integer(), nullable=True, comment='资源类型代码 (冗余)'),
    sa.Column('refund_state', sa.Integer(), nullable=True, comment='退款状态代码'),
    sa.Column('ship_state', sa.Integer(), nullable=True, comment='发货状态代码'),
    sa.Column('etl_inserted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL插入时间'),
    sa.Column('etl_updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL更新时间'),
    sa.ForeignKeyConstraint(['goods_resource_id'], ['dim_xiaoe_goods.goods_resource_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['fact_xiaoe_order.order_id'], ),
    sa.PrimaryKeyConstraint('order_item_id')
    )
    op.create_index(op.f('ix_fact_xiaoe_order_item_goods_resource_id'), 'fact_xiaoe_order_item', ['goods_resource_id'], unique=False)
    op.create_index(op.f('ix_fact_xiaoe_order_item_goods_spu_id'), 'fact_xiaoe_order_item', ['goods_spu_id'], unique=False)
    op.create_index(op.f('ix_fact_xiaoe_order_item_order_id'), 'fact_xiaoe_order_item', ['order_id'], unique=False)
    op.create_index(op.f('ix_fact_xiaoe_order_item_sku_id'), 'fact_xiaoe_order_item', ['sku_id'], unique=False)
    op.create_table('fact_xiaoe_aftersale_item',
    sa.Column('aftersale_item_id', sa.Integer(), autoincrement=True, nullable=False, comment='代理主键'),
    sa.Column('aftersale_id', sa.String(length=100), nullable=False, comment='售后单ID (外键)'),
    sa.Column('goods_name', sa.String(length=500), nullable=True, comment='商品名称 (冗余)'),
    sa.Column('sku_info', sa.String(length=255), nullable=True, comment='SKU规格信息 (冗余)'),
    sa.Column('quantity', sa.Integer(), nullable=True, comment='售后数量'),
    sa.Column('price', sa.Numeric(precision=12, scale=2), nullable=True, comment='商品价格 (元, 冗余)'),
    sa.Column('goods_tag', sa.String(length=100), nullable=True, comment='商品标签 (冗余)'),
    sa.Column('img_url', sa.Text(), nullable=True, comment='商品图片URL (冗余)'),
    sa.Column('etl_inserted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL插入时间'),
    sa.Column('etl_updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='ETL更新时间'),
    sa.ForeignKeyConstraint(['aftersale_id'], ['fact_xiaoe_aftersale.aftersale_id'], ),
    sa.PrimaryKeyConstraint('aftersale_item_id')
    )
    op.create_index(op.f('ix_fact_xiaoe_aftersale_item_aftersale_id'), 'fact_xiaoe_aftersale_item', ['aftersale_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_fact_xiaoe_aftersale_item_aftersale_id'), table_name='fact_xiaoe_aftersale_item')
    op.drop_table('fact_xiaoe_aftersale_item')
    op.drop_index(op.f('ix_fact_xiaoe_order_item_sku_id'), table_name='fact_xiaoe_order_item')
    op.drop_index(op.f('ix_fact_xiaoe_order_item_order_id'), table_name='fact_xiaoe_order_item')
    op.drop_index(op.f('ix_fact_xiaoe_order_item_goods_spu_id'), table_name='fact_xiaoe_order_item')
    op.drop_index(op.f('ix_fact_xiaoe_order_item_goods_resource_id'), table_name='fact_xiaoe_order_item')
    op.drop_table('fact_xiaoe_order_item')
    op.drop_index(op.f('ix_fact_xiaoe_aftersale_order_id'), table_name='fact_xiaoe_aftersale')
    op.drop_table('fact_xiaoe_aftersale')
    op.drop_index(op.f('ix_fact_xiaoe_order_user_id'), table_name='fact_xiaoe_order')
    op.drop_table('fact_xiaoe_order')
    op.drop_table('sync_state')
    op.drop_table('dim_xiaoe_user')
    op.drop_index(op.f('ix_dim_xiaoe_goods_spu_id'), table_name='dim_xiaoe_goods')
    op.drop_table('dim_xiaoe_goods')
    # ### end Alembic commands ###
