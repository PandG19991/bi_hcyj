---
description: 
globs: 
alwaysApply: true
---
# BI Data Synchronization Project Overview

This project aims to synchronize data from external platforms (initially Xiaoe) into a central database for Business Intelligence (BI) purposes.

你会带着全盘思考带着批判思维来审视问题
## Key Directories

*   **[config/](mdc:config)**: Handles configuration loading (`[.env](mdc:.env)`, `[config/config.py](mdc:config/config.py)`).
*   **[core/](mdc:core)**: Contains core logic:
    *   `[core/db.py](mdc:core/db.py)`: Database connection and session management.
    *   `[core/models.py](mdc:core/models.py)`: SQLAlchemy database models (e.g., `Order`, `User`, `Product`).
    *   `[core/loaders.py](mdc:core/loaders.py)`: Functions for loading/upserting data into the database.
*   **[platforms/](mdc:platforms)**: Platform-specific integration code.
    *   `[platforms/xiaoe/](mdc:platforms/xiaoe)`: Code for interacting with the Xiaoe API.
        *   `[platforms/xiaoe/client.py](mdc:platforms/xiaoe/client.py)`: Xiaoe API client.
        *   `[platforms/xiaoe/transformers.py](mdc:platforms/xiaoe/transformers.py)`: Data transformation logic for Xiaoe data.
*   **[utils/](mdc:utils)**: Utility functions.
    *   `[utils/logger.py](mdc:utils/logger.py)`: Logging setup.
    *   `[utils/retry.py](mdc:utils/retry.py)`: Retry decorator implementation.
*   **[scripts/](mdc:scripts)**: Executable scripts.
    *   `[scripts/sync_xiaoe.py](mdc:scripts/sync_xiaoe.py)`: The main script to run the Xiaoe data synchronization process.
*   **[logs/](mdc:logs)**: Stores log files generated by the application.
*   **[alembic/](mdc:alembic)**: Database migration files managed by Alembic. Configuration is in `[alembic.ini](mdc:alembic.ini)` and `[alembic/env.py](mdc:alembic/env.py)`. Migrations are stored in `[alembic/versions/](mdc:alembic/versions)`.

## Configuration

Project configuration is managed via environment variables loaded from the `[.env](mdc:.env)` file using `[config/config.py](mdc:config/config.py)` and the `python-dotenv` library. An example configuration can be found in `[config/.env.example](mdc:config/.env.example)`.

## Database

*   Database connection details are defined in `[.env](mdc:.env)`.
*   SQLAlchemy models are defined in `[core/models.py](mdc:core/models.py)`.
*   Database session management is handled in `[core/db.py](mdc:core/db.py)`.
*   Database schema migrations are managed using Alembic (`[alembic.ini](mdc:alembic.ini)`, `[alembic/env.py](mdc:alembic/env.py)`). Run `alembic upgrade head` to apply migrations.

## Main Execution

The primary script for running the data synchronization is `[scripts/sync_xiaoe.py](mdc:scripts/sync_xiaoe.py)`.

## Testing

A script for testing the local database flow (data loading) is available at `[test_local_db_flow.py](mdc:test_local_db_flow.py)`.

## Dependencies

Project dependencies are listed in `[requirements.txt](mdc:requirements.txt)`.



